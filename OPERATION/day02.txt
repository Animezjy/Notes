复习nginx_day01:

nginx 源码包

nginx-1.10.3.tar.gz
nginx-1.12.2.tar.gz

tar -xf nginx-1.10.3.tar.gz
cd nginx-1.10-1.3
yum -y install gcc pcre-devel openssl-devel
useradd -s /sbin/nologin nginx
./configure --prefix=/usr/local/nginx \
--user=nginx --group=nginx \
--with-http_ssl_module
make  -->  源码包目录 
make install (复制拷贝)--/usr/local/nginx

/usr/local/nginx/sbin/nginx 启动
/usr/local/nginx/sbin/nginx -s stop 关闭
/usr/local/nginx/sbin/nginx -s reload 重新加载配置文件(服务不能关闭)
ln -s /usr/local/nginx/sbin/nginx /sbin/   创建快捷方式

升级nginx
tar -xf nginx-1.12.2.tar.gz 
cd nginx-1.12.2
./configure --user=nginx \
--group=nginx \ 
--with-http_ssl_module
make
在源码目录下objs/nginx （1.12.2）
mv /usr/local/nginx/sbin/nginx{,.bak} 备份旧的
cp objs/nginx  /usr/local/nginx/sbin/ 
killall nginx 杀死旧的进程
nginx 启动服务
nginx -V 查看更新是否成功







配置nginx
vim /usr/local/nginx/conf/nginx.conf

全局设置(用户，进程数量，日志，并发量）
http{
   server {
    	listen 80;
auth_basic "xxx";
aurh_basic_user_file "/usr/local/nginx/pass";
	server_name localhost;
	root html;
	index index.html
}
}
用户认证
yum -y install httpd-tools
htpasswd -c /usr/local/nginx/pass tom
new password:123
retype password:123

htpasswd /usr/local/nginx/pass jerry #追加用户不加-c选项
nginx -s reload


基于域名的虚拟主机
#vim /usr/local/nginx/conf/nginx.conf

http{
   server {
    	listen 80;
auth_basic "xxx";
aurh_basic_user_file "/usr/local/nginx/pass";
	server_name www.a.com;
	root html;
	index index.html
}
    server {
	listen 80;
	server_name www.b.com;
	root www;
	index index.html;
}
}
mkdir /usr/local/nginx/www && cd /usr/local/nginx/www
echo "www" > index.html
nginx -s reload

客户端:
vim /etc/hosts
服务端地址 www.a.com www.b.com
firefox www.b.com

1.安装
2.升级
3.认证
4.虚拟主机
5.https
私钥，公钥=[证书]






nginx day02:
笔记:

安全的虚拟主机

1) 生成私钥证书
cd /usr/local/nginx/conf
openssl genrsa > cert.key  //生成私钥
openssl req -new -x509 -key cert.key > cert.pem //生成证书
2)修改Nginx配置文件，设置加密网站虚拟主机
#vim /usr/local/nginx/conf/nginx.conf

server {
        listen       443 ssl;
        server_name  www.a.com;

        ssl_certificate      cert.pem;
        ssl_certificate_key  cert.key;

        ssl_session_cache    shared:SSL:1m;
        ssl_session_timeout  5m;

        ssl_ciphers  HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers  on;

        location / {
            root   html;
            index  index.html index.htm;
        }
    }


LNMP(linux,nginx,mysql,php)(实现动态网站)


静态网站
client --------------------Web Server[a.mp3]
http://192.168.4.5/a.mp3 -----------> 
/usr/local/nginx/html/a.mp3

动态网站
client---------------------Web Server[a.sh a.php]
服务器解释之后执行 只返回结果
模块化
php-----mysql  

部署LNMP

一、安装软件包

1.安装依赖包
2.部署nginx
3.安装Mariadb
yum -y install mariadb mariadb-server mariadb-devel
4.安装php和php-fpm php-mysql

二、启动服务
1)启动nginx
systemctl stop httpd
/usr/local/nginx/sbin/nginx
netstat -nlptu |grep 80  nginx监听80端口
2)启动mariadb
systemctl start mariadb
systemctl status mariadb
systemctl enable mariadb
3)启动php-fpm服务
systemctl start php-fpm
systemctl status php-fpm
systemctl enable php-fpm
4)设置防火墙与SELinux
firewall-cmd --set-default-zone=trusted
setenforce 0

构建LNMP平台
nginx:80
mysql:3306
php-fpm:9000

一、php-fpm配置文件
/etc/php-fpm.d/www.conf

1)动静分离(nginx) location匹配用户地址栏
location支持正则表达式
#vim /usr/local/nginx/conf/nginx.conf

server{
	listen 80;
	server_name www.a.com;
	location / {
	allow all;
	自己处理ngin
	root	html;
	}
	location ~ \.php${
	  转发给9000
	root html;
	fastcgi_pass 127.0.0.0:9000;
	fastcgi_index index index.php;
	include fastcgi.conf;
	}
}

错误: 
1.test.php
  File not found
2.nginx + php 没有启动
   无法连接
   An error
3.test.php[语法]
   空白


参考错误日志
/usr/local/nginx/html/error.log    nginx错误日志
/var/log/php-fpm/www-error.log     php错误日志	


	
[美工,前端，后端，测试，运维,监控]
画草图---外表---数据----内测，外网

三、地址重写(地址栏被重写了)

www.360buy.com ------------>www.jd.com  地址重写


http+ssl :443
http

http://www.baidu.com  -----------> https 自动跳转


nginx地址重写
格式:rewrite regex replacement flag
rewrite 旧地址（支持正则表达式） 新地址 [选项]

1)只是文件跳转（还在同一个网站）
#vim /usr/local/nginx/conf/nginx.html
rewrite /a.html /b.html redirect;

客户端:  firefox http://www.a.com/a.html --------> www.a.com/b.html
2）网站跳转
rewrite   ^/ http://www.tmooc.cn;

3)访问子页面时 跳转到新网站的子页面
rewrite ^/(.*) http://www.tmooc.cn/$1;
192.168.4.5/xx--------------> www.tmooc.cn/xx

/usr/local/nginx/html

                         





















LAMP(linux,apache,mysql,php)







  
















